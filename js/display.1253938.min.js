var pixi_display;
! function(e) {
	var t = PIXI.Container;
	Object.assign(t.prototype, {
		renderWebGL: function(e) {
			if(!this._activeParentLayer || this._activeParentLayer == e._activeLayer) {
				if(!this.visible) return void(this.displayOrder = 0);
				this.displayOrder = e.incDisplayOrder(), this.worldAlpha <= 0 || !this.renderable || this.containerRenderWebGL(e)
			}
		},
		renderCanvas: function(e) {
			if(!this._activeParentLayer || this._activeParentLayer == e._activeLayer) {
				if(!this.visible) return void(this.displayOrder = 0);
				this.displayOrder = e.incDisplayOrder(), this.worldAlpha <= 0 || !this.renderable || this.containerRenderCanvas(e)
			}
		},
		containerRenderWebGL: PIXI.Container.prototype.renderWebGL,
		containerRenderCanvas: PIXI.Container.prototype.renderCanvas
	})
}(pixi_display || (pixi_display = {})), Object.assign(PIXI.DisplayObject.prototype, {
	parentLayer: null,
	_activeParentLayer: null,
	parentGroup: null,
	zOrder: 0,
	zIndex: 0,
	updateOrder: 0,
	displayOrder: 0,
	layerableChildren: !0
}), PIXI.particles && PIXI.particles.ParticleContainer && (PIXI.particles.ParticleContainer.prototype.layerableChildren = !1), PIXI.ParticleContainer && (PIXI.ParticleContainer.prototype.layerableChildren = !1);
var __extends = this && this.__extends || function(e, t) {
		function i() {
			this.constructor = e
		}
		for(var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
		e.prototype = null === t ? Object.create(t) : (i.prototype = t.prototype, new i)
	},
	pixi_display;
! function(e) {
	var t = PIXI.utils,
		i = function(e) {
			function t(t, i) {
				var r = e.call(this) || this;
				return r._activeLayer = null, r._activeStage = null, r._activeChildren = [], r._lastUpdateId = -1, r.canDrawWithoutLayer = !1, r.canDrawInParentStage = !0, r.zIndex = 0, r.enableSort = !1, r._tempResult = [], r._tempZero = [], r.useZeroOptimization = !1, r.zIndex = t, r.enableSort = !!i, "function" == typeof i && r.on("sort", i), r
			}
			return __extends(t, e), t.prototype.doSort = function(e, i) {
				if(this.listeners("sort", !0))
					for(var r = 0; r < i.length; r++) this.emit("sort", i[r]);
				this.useZeroOptimization ? this.doSortWithZeroOptimization(e, i) : i.sort(t.compareZIndex)
			}, t.compareZIndex = function(e, t) {
				return e.zIndex !== t.zIndex ? e.zIndex - t.zIndex : e.zOrder > t.zOrder ? -1 : e.zOrder < t.zOrder ? 1 : e.updateOrder - t.updateOrder
			}, t.prototype.doSortWithZeroOptimization = function(e, t) {
				throw new Error("not implemented yet")
			}, t.prototype.clear = function() {
				this._activeLayer = null, this._activeStage = null, this._activeChildren.length = 0
			}, t.prototype.addDisplayObject = function(e, t) {
				this.check(e), t._activeParentLayer = this._activeLayer, this._activeLayer ? this._activeLayer._activeChildren.push(t) : this._activeChildren.push(t)
			}, t.prototype.foundLayer = function(e, i) {
				this.check(e), null != this._activeLayer && t.conflict(), this._activeLayer = i, this._activeStage = e
			}, t.prototype.foundStage = function(e) {
				this._activeLayer || this.canDrawInParentStage || this.clear()
			}, t.prototype.check = function(e) {
				if(this._lastUpdateId < t._layerUpdateId) this._lastUpdateId = t._layerUpdateId, this.clear(), this._activeStage = e;
				else if(this.canDrawInParentStage) {
					for(var i = this._activeStage; i && i != e;) i = i._activeParentStage;
					if(this._activeStage = i, null == i) return void this.clear()
				}
			}, t.conflict = function() {
				t._lastLayerConflict + 5e3 < Date.now() && (t._lastLayerConflict = Date.now(), console.log("PIXI-display plugin found two layers with the same group in one stage - that's not healthy. Please place a breakpoint here and debug it"))
			}, t
		}(t.EventEmitter);
	i._layerUpdateId = 0, i._lastLayerConflict = 0, e.Group = i
}(pixi_display || (pixi_display = {}));
var pixi_display;
! function(e) {
	var t = PIXI.interaction.InteractionManager;
	Object.assign(t.prototype, {
		_queue: [
			[],
			[]
		],
		_displayProcessInteractive: function(e, t, i, r) {
			if(!t || !t.visible) return 0;
			var a = 0,
				n = r = t.interactive || r;
			t.hitArea && (n = !1);
			var s = t._mask;
			i < 1 / 0 && s && (s.containsPoint(e) || (i = 1 / 0)), i < 1 / 0 && t.filterArea && (t.filterArea.contains(e.x, e.y) || (i = 1 / 0));
			var o = t.children;
			if(t.interactiveChildren && o)
				for(var l = o.length - 1; l >= 0; l--) {
					var p = o[l],
						d = this._displayProcessInteractive(e, p, i, n);
					if(d) {
						if(!p.parent) continue;
						a = d, i = d
					}
				}
			return r && (i < t.displayOrder && (t.hitArea ? (t.worldTransform.applyInverse(e, this._tempPoint), t.hitArea.contains(this._tempPoint.x, this._tempPoint.y) && (a = t.displayOrder)) : t.containsPoint && t.containsPoint(e) && (a = t.displayOrder)), t.interactive && this._queueAdd(t, a)), a
		},
		processInteractive: function(e, t, i, r, a) {
			var n = null,
				s = null;
			e.data && e.data.global ? (n = e, s = n.data.global) : s = e, this._startInteractionProcess(), this._displayProcessInteractive(s, t, r ? 0 : 1 / 0, !1), this._finishInteractionProcess(n, i)
		},
		_startInteractionProcess: function() {
			this._eventDisplayOrder = 1, this._queue || (this._queue = [
				[],
				[]
			]), this._queue[0].length = 0, this._queue[1].length = 0
		},
		_queueAdd: function(e, t) {
			var i = this._queue;
			if(t < this._eventDisplayOrder) i[0].push(e);
			else {
				if(t > this._eventDisplayOrder) {
					this._eventDisplayOrder = t;
					for(var r = i[1], a = 0; a < r.length; a++) i[0].push(r[a]);
					i[1].length = 0
				}
				i[1].push(e)
			}
		},
		_finishInteractionProcess: function(e, t) {
			for(var i = this._queue, r = i[0], a = 0; a < r.length; a++) e ? t(e, r[a], !1) : t(r[a], !1);
			for(r = i[1], a = 0; a < r.length; a++) e ? (e.target || (e.target = r[a]), t(e, r[a], !0)) : t(r[a], !0)
		}
	})
}(pixi_display || (pixi_display = {}));
var pixi_display;
! function(e) {
	var t = PIXI.Container,
		i = function(t) {
			function i(i) {
				void 0 === i && (i = null);
				var r = t.call(this) || this;
				return r.isLayer = !0, r.group = null, r._activeChildren = [], r._tempChildren = null, r._activeStageParent = null, r._sortedChildren = [], r._tempLayerParent = null, r.insertChildrenBeforeActive = !0, r.insertChildrenAfterActive = !0, null != i ? (r.group = i, r.zIndex = i.zIndex) : r.group = new e.Group(0, (!1)), r._tempChildren = r.children, r
			}
			return __extends(i, t), i.prototype.beginWork = function(e) {
				var t = this._activeChildren;
				this._activeStageParent = e, this.group.foundLayer(e, this);
				var i = this.group._activeChildren;
				t.length = 0;
				for(var r = 0; r < i.length; r++) i[r]._activeParentLayer = this, t.push(i[r]);
				i.length = 0
			}, i.prototype.endWork = function() {
				for(var e = this.children, t = this._activeChildren, i = this._sortedChildren, r = 0; r < t.length; r++) this.emit("display", t[r]);
				if(i.length = 0, this.insertChildrenBeforeActive)
					for(var r = 0; r < e.length; r++) i.push(e[r]);
				for(var r = 0; r < t.length; r++) i.push(t[r]);
				if(!this.insertChildrenBeforeActive && this.insertChildrenAfterActive)
					for(var r = 0; r < e.length; r++) i.push(e[r]);
				this.group.enableSort && this.doSort()
			}, i.prototype.updateDisplayLayers = function() {}, i.prototype.doSort = function() {
				this.group.doSort(this, this._sortedChildren)
			}, i.prototype._preRender = function(e) {
				return(!this._activeParentLayer || this._activeParentLayer == e._activeLayer) && (this.visible ? (this.displayOrder = e.incDisplayOrder(), !(this.worldAlpha <= 0 || !this.renderable) && (this.children !== this._sortedChildren && this._tempChildren != this.children && (this._tempChildren = this.children), this._boundsID++, this.children = this._sortedChildren, this._tempLayerParent = e._activeLayer, e._activeLayer = this, !0)) : (this.displayOrder = 0, !1))
			}, i.prototype._postRender = function(e) {
				this.children = this._tempChildren, e._activeLayer = this._tempLayerParent, this._tempLayerParent = null
			}, i.prototype.renderWebGL = function(e) {
				this._preRender(e) && (this.containerRenderWebGL(e), this._postRender(e))
			}, i.prototype.renderCanvas = function(e) {
				this._preRender(e) && (this.containerRenderCanvas(e), this._postRender(e))
			}, i
		}(t);
	e.Layer = i
}(pixi_display || (pixi_display = {}));
var pixi_display;
! function(e) {
	var t = PIXI.WebGLRenderer,
		i = PIXI.CanvasRenderer;
	Object.assign(t.prototype, {
		_lastDisplayOrder: 0,
		_activeLayer: null,
		incDisplayOrder: function() {
			return ++this._lastDisplayOrder
		},
		_oldRender: t.prototype.render,
		render: function(e, t, i, r, a) {
			t || (this._lastDisplayOrder = 0), this._activeLayer = null, e.isStage && e.updateStage(), this._oldRender(e, t, i, r, a)
		}
	}), Object.assign(i.prototype, {
		_lastDisplayOrder: 0,
		_activeLayer: null,
		incDisplayOrder: function() {
			return ++this._lastDisplayOrder
		},
		_oldRender: i.prototype.render,
		render: function(e, t, i, r, a) {
			t || (this._lastDisplayOrder = 0), this._activeLayer = null, e.isStage && e.updateStage(), this._oldRender(e, t, i, r, a)
		}
	})
}(pixi_display || (pixi_display = {}));
var pixi_display;
! function(e) {
	var t = function(t) {
		function i() {
			var e = t.call(this) || this;
			return e.isStage = !0, e._tempGroups = [], e._activeLayers = [], e._activeParentStage = null, e
		}
		return __extends(i, t), i.prototype.clear = function() {
			this._activeLayers.length = 0, this._tempGroups.length = 0
		}, i.prototype.destroy = function() {
			this.clear()
		}, i.prototype._addRecursive = function(e) {
			if(e.visible) {
				if(e.isLayer) {
					var t = e;
					this._activeLayers.push(t), t.beginWork(this)
				}
				if(e != this && e.isStage) {
					var r = e;
					return void r.updateAsChildStage(this)
				}
				var a = e.parentGroup;
				null != a && e.parentGroup.addDisplayObject(this, e);
				var n = e.parentLayer;
				if(null != n && n.group.addDisplayObject(this, e), e.updateOrder = ++i._updateOrderCounter, !(e.alpha <= 0) && e.renderable && e.layerableChildren) {
					var s = e.children;
					if(s && s.length)
						for(var o = 0; o < s.length; o++) this._addRecursive(s[o])
				}
			}
		}, i.prototype._updateStageInner = function() {
			this.clear(), this._addRecursive(this);
			for(var e = this._activeLayers, t = 0; t < e.length; t++) e[t].endWork()
		}, i.prototype.updateAsChildStage = function(e) {
			this._activeParentStage = e, i._updateOrderCounter = 0, this._updateStageInner()
		}, i.prototype.updateStage = function() {
			this._activeParentStage = null, e.Group._layerUpdateId++, this._updateStageInner()
		}, i
	}(e.Layer);
	t._updateOrderCounter = 0, e.Stage = t
}(pixi_display || (pixi_display = {})), Object.assign(PIXI, {
	display: pixi_display
});